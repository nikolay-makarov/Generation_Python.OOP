"""Класс Color
Для кодирования цвета часто используется шестнадцатеричное значение цвета.
Оно записывается в формате #RRGGBB, где RR (красный), GG (зеленый) и BB (синий) являются
шестнадцатеричными целыми числами в диапазоне [00; FF] (или [0; 255] в десятичной системе счисления),
которые указывают интенсивность соответствующих цветов.
Например, #0000FF представляет чистый синий цвет, так как синий компонент имеет наивысшее значение (FF),
а остальные — 00.
Реализуйте класс Color, описывающий цвет. При создании экземпляра класс должен принимать один аргумент:
hexcode — шестнадцатеричное значение цвета
Экземпляр класса Color должен иметь три атрибута:
r — интенсивность красного компонента цвета в виде десятичного числа
g — интенсивность зеленого компонента цвета в виде десятичного числа
b — интенсивность синего компонента цвета в виде десятичного числа
Класс Color должен иметь одно свойство:
hexcode — свойство, доступное для чтения и записи, возвращающее шестнадцатеричное значение цвета
Примечание 1. При изменении шестнадцатеричного значения цвета значения атрибутов r, g и b также должны изменяться.
Примечание 2. Гарантируется, что для записи шестнадцатеричных чисел используются только заглавные латинские буквы.
"""


class Color:
    def __init__(self, hexcode: str) -> None:
        self.hexcode = hexcode

    @property
    def hexcode(self) -> str:
        return f'{self.r:02X}{self.g:02X}{self.b:02X}'

    @hexcode.setter
    def hexcode(self, hexcode: str) -> None:
        self.r = int(hexcode[:2], base=16)
        self.g = int(hexcode[2:4], base=16)
        self.b = int(hexcode[4:6], base=16)


color = Color('0000FF')

print(color.hexcode)    # 0000FF
print(color.r)          # 0
print(color.g)          # 0
print(color.b)          # 255

color.hexcode = 'A782E3'
print(color.hexcode)    # A782E3
print(color.r)          # 167
print(color.g)          # 130
print(color.b)          # 227
